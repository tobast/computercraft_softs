chest = peripheral.wrap("bottom")

function getItem(item, num, toSlot, simulate)
	----WARNING: Works for num < stackSize only
	chest.condenseItems()
	local size = chest.getInventorySize()
	for slot=1,size do
		local stack = chest.getStackInSlot(slot)
		if(stack.raw_name == item) then
			if(stack.qty < num) then
				return -1
			else
				if(simulate == true) then
					return num
				else
					return chest.pushItem('UP', slot, num, toSlot)
				end
			end
		end
	end
	return -1
end

CABLE='ic2.itemcable'
IRON_PLATE='ic2.itemplateiron'
REDSTONE='item.redstone'
COOLANT_CELL='ic2.itemcellcoolant'
TIN_PLATE='ic2.itemplatetin'
TEN_K_CELL='ic2.reactorcoolantsimple'

while true do
	-- Step 1 : check that necessary stuff is in the chest
	if getItem(CABLE,8,0,true) < 0 or getItem(IRON_PLATE,1,0,true) < 0 or
	   getItem(REDSTONE,2,0,true) < 0 or getItem(COOLANT_CELL,3,0,true) < 0 or
	   getItem(TIN_PLATE,12,0,true) < 0 then
		break
	end
	
	-- Step 2 : craft coolant cell
	for i=1,3 do
		getItem(COOLANT_CELL,1,6)
		getItem(TIN_PLATE,1,2)
		getItem(TIN_PLATE,1,5)
		getItem(TIN_PLATE,1,7)
		getItem(TIN_PLATE,1,10)
		turtle.select(1)
		turtle.craft(1)
		chest.pullItem('UP',1)
	end

	-- Step 3 : elec. circ
	getItem(CABLE,1,1)
	getItem(CABLE,1,2)
	getItem(CABLE,1,3)
	getItem(CABLE,1,9)
	getItem(CABLE,1,10)
	getItem(CABLE,1,11)
	getItem(REDSTONE,1,5)
	getItem(REDSTONE,1,7)
	getItem(IRON_PLATE,1,6)
	turtle.select(6)
	turtle.craft()

	-- Step 4 : Overclockerz!
	getItem(CABLE,1,5)
	getItem(CABLE,1,7)
	getItem(TEN_K_CELL,1,1)
	getItem(TEN_K_CELL,1,2)
	getItem(TEN_K_CELL,1,3)
	turtle.select(1)
	turtle.craft()
	
	chest.pullItem('UP',1)
end

print("MATERIALS MISSING.")
